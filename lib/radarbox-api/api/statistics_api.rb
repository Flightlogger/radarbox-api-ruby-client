=begin
#RadarBox On Demand API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.1.14

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

module Radarbox
  class StatisticsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Statistics for major airlines
    # Get statistics for major airlines
    # @param [Hash] opts the optional parameters
    # @return [AirlineStatisticsResponse]
    def get_airlines_statistics(opts = {})
      data, _status_code, _headers = get_airlines_statistics_with_http_info(opts)
      data
    end

    # Statistics for major airlines
    # Get statistics for major airlines
    # @param [Hash] opts the optional parameters
    # @return [Array<(AirlineStatisticsResponse, Integer, Hash)>] AirlineStatisticsResponse data, response status code and response headers
    def get_airlines_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_airlines_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/airlines'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'AirlineStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_airlines_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for business jet models
    # Get statistics for business jet models
    # @param [Hash] opts the optional parameters
    # @return [BusinessJetModelStatisticsResponse]
    def get_bus_jet_models_statistics_internal(opts = {})
      data, _status_code, _headers = get_bus_jet_models_statistics_internal_with_http_info(opts)
      data
    end

    # Statistics for business jet models
    # Get statistics for business jet models
    # @param [Hash] opts the optional parameters
    # @return [Array<(BusinessJetModelStatisticsResponse, Integer, Hash)>] BusinessJetModelStatisticsResponse data, response status code and response headers
    def get_bus_jet_models_statistics_internal_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_bus_jet_models_statistics_internal ...'
      end
      # resource path
      local_var_path = '/statistics/flights/business/models'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'BusinessJetModelStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_bus_jet_models_statistics_internal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for business jet operators
    # Get statistics for business jet operators
    # @param [Hash] opts the optional parameters
    # @return [BusinessJetOperatorStatisticsResponse]
    def get_bus_jet_operator_statistics_internal(opts = {})
      data, _status_code, _headers = get_bus_jet_operator_statistics_internal_with_http_info(opts)
      data
    end

    # Statistics for business jet operators
    # Get statistics for business jet operators
    # @param [Hash] opts the optional parameters
    # @return [Array<(BusinessJetOperatorStatisticsResponse, Integer, Hash)>] BusinessJetOperatorStatisticsResponse data, response status code and response headers
    def get_bus_jet_operator_statistics_internal_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_bus_jet_operator_statistics_internal ...'
      end
      # resource path
      local_var_path = '/statistics/flights/business/operators'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'BusinessJetOperatorStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_bus_jet_operator_statistics_internal\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for business flights on major airports
    # Get statistics for business flights on major airports
    # @param [Hash] opts the optional parameters
    # @return [AirportsStatisticsResponse]
    def get_business_airport_statistics(opts = {})
      data, _status_code, _headers = get_business_airport_statistics_with_http_info(opts)
      data
    end

    # Statistics for business flights on major airports
    # Get statistics for business flights on major airports
    # @param [Hash] opts the optional parameters
    # @return [Array<(AirportsStatisticsResponse, Integer, Hash)>] AirportsStatisticsResponse data, response status code and response headers
    def get_business_airport_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_business_airport_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/airports/business'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'AirportsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_business_airport_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Flights statistics (business)
    # Get statistics for all business flights
    # @param [Hash] opts the optional parameters
    # @return [FlightsStatisticsResponse]
    def get_business_flights_statistics(opts = {})
      data, _status_code, _headers = get_business_flights_statistics_with_http_info(opts)
      data
    end

    # Flights statistics (business)
    # Get statistics for all business flights
    # @param [Hash] opts the optional parameters
    # @return [Array<(FlightsStatisticsResponse, Integer, Hash)>] FlightsStatisticsResponse data, response status code and response headers
    def get_business_flights_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_business_flights_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/flights/business'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'FlightsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_business_flights_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for commercial flights on major airports
    # Get statistics for commercial flights on major airports
    # @param [Hash] opts the optional parameters
    # @return [AirportsStatisticsResponse]
    def get_commercial_airport_statistics(opts = {})
      data, _status_code, _headers = get_commercial_airport_statistics_with_http_info(opts)
      data
    end

    # Statistics for commercial flights on major airports
    # Get statistics for commercial flights on major airports
    # @param [Hash] opts the optional parameters
    # @return [Array<(AirportsStatisticsResponse, Integer, Hash)>] AirportsStatisticsResponse data, response status code and response headers
    def get_commercial_airport_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_commercial_airport_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/airports/commercial'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'AirportsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_commercial_airport_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Flights statistics (commercial)
    # Get statistics for all commercial flights
    # @param [Hash] opts the optional parameters
    # @return [FlightsStatisticsResponse]
    def get_commercial_flights_statistics(opts = {})
      data, _status_code, _headers = get_commercial_flights_statistics_with_http_info(opts)
      data
    end

    # Flights statistics (commercial)
    # Get statistics for all commercial flights
    # @param [Hash] opts the optional parameters
    # @return [Array<(FlightsStatisticsResponse, Integer, Hash)>] FlightsStatisticsResponse data, response status code and response headers
    def get_commercial_flights_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_commercial_flights_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/flights/commercial'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'FlightsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_commercial_flights_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for all flights
    # Get statistics for all flights worldwide
    # @param [Hash] opts the optional parameters
    # @return [FlightsStatisticsResponse]
    def get_flights_statistics(opts = {})
      data, _status_code, _headers = get_flights_statistics_with_http_info(opts)
      data
    end

    # Statistics for all flights
    # Get statistics for all flights worldwide
    # @param [Hash] opts the optional parameters
    # @return [Array<(FlightsStatisticsResponse, Integer, Hash)>] FlightsStatisticsResponse data, response status code and response headers
    def get_flights_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_flights_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/flights'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'FlightsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_flights_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Statistics for major airports
    # Get statistics for a specific airport
    # @param [Hash] opts the optional parameters
    # @return [AirportsStatisticsResponse]
    def get_major_airport_statistics(opts = {})
      data, _status_code, _headers = get_major_airport_statistics_with_http_info(opts)
      data
    end

    # Statistics for major airports
    # Get statistics for a specific airport
    # @param [Hash] opts the optional parameters
    # @return [Array<(AirportsStatisticsResponse, Integer, Hash)>] AirportsStatisticsResponse data, response status code and response headers
    def get_major_airport_statistics_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: StatisticsApi.get_major_airport_statistics ...'
      end
      # resource path
      local_var_path = '/statistics/airports'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'AirportsStatisticsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: StatisticsApi#get_major_airport_statistics\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
