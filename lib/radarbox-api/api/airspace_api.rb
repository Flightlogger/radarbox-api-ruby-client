=begin
#RadarBox On Demand API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.1.14

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

module Radarbox
  class AirspaceApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # NAT (North Atlantic Tracks)
    # The North Atlantic Tracks are high altitude routes across the atlantic between Western Europe and North America. The tracks are updated daily. Use this endpoint to get the most up-to-date tracks
    # @param [Hash] opts the optional parameters
    # @return [GetNatPacTracksResponse]
    def get_nat_tracks(opts = {})
      data, _status_code, _headers = get_nat_tracks_with_http_info(opts)
      data
    end

    # NAT (North Atlantic Tracks)
    # The North Atlantic Tracks are high altitude routes across the atlantic between Western Europe and North America. The tracks are updated daily. Use this endpoint to get the most up-to-date tracks
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetNatPacTracksResponse, Integer, Hash)>] GetNatPacTracksResponse data, response status code and response headers
    def get_nat_tracks_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AirspaceApi.get_nat_tracks ...'
      end
      # resource path
      local_var_path = '/airspace/natTracks'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetNatPacTracksResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AirspaceApi#get_nat_tracks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get NOTAMS by airport
    # NOTAMs (NOtice To AirMen) are a way of local aviation authorities alerting pilots of potential hazards. Use this endpoint if you want to see the alerts that are relevant for a specific airport.
    # @param icao_code ICAO code
    # @param [Hash] opts the optional parameters
    # @return [GetNotamsResponse]
    def get_notams(icao_code, opts = {})
      data, _status_code, _headers = get_notams_with_http_info(icao_code, opts)
      data
    end

    # Get NOTAMS by airport
    # NOTAMs (NOtice To AirMen) are a way of local aviation authorities alerting pilots of potential hazards. Use this endpoint if you want to see the alerts that are relevant for a specific airport.
    # @param icao_code ICAO code
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetNotamsResponse, Integer, Hash)>] GetNotamsResponse data, response status code and response headers
    def get_notams_with_http_info(icao_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AirspaceApi.get_notams ...'
      end
      # verify the required parameter 'icao_code' is set
      if @api_client.config.client_side_validation && icao_code.nil?
        fail ArgumentError, "Missing the required parameter 'icao_code' when calling AirspaceApi.get_notams"
      end
      # resource path
      local_var_path = '/airspace/{icaoCode}/notams'.sub('{' + 'icaoCode' + '}', icao_code.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetNotamsResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AirspaceApi#get_notams\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # PAC (Pacific Organized Track System - PACOTS) 
    # Pacific Organized Track System describes the set of routes across the Pacific between Hawaii or North America and Japan/South-east Asia - updated on a daily basis. Use this endpoint to get the most up-to-date information.
    # @param [Hash] opts the optional parameters
    # @return [GetNatPacTracksResponse]
    def get_pac_tracks(opts = {})
      data, _status_code, _headers = get_pac_tracks_with_http_info(opts)
      data
    end

    # PAC (Pacific Organized Track System - PACOTS) 
    # Pacific Organized Track System describes the set of routes across the Pacific between Hawaii or North America and Japan/South-east Asia - updated on a daily basis. Use this endpoint to get the most up-to-date information.
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetNatPacTracksResponse, Integer, Hash)>] GetNatPacTracksResponse data, response status code and response headers
    def get_pac_tracks_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AirspaceApi.get_pac_tracks ...'
      end
      # resource path
      local_var_path = '/airspace/pacTracks'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetNatPacTracksResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AirspaceApi#get_pac_tracks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
