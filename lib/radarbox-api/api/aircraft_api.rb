=begin
#RadarBox On Demand API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.1.14

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

module Radarbox
  class AircraftApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Aircraft by ID
    # Use this endpoint if you are looking for details or statistics for a specific aircraft (find by Mode-S hex code or tail number)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :mode_s Mode-S code
    # @option opts [String] :registration Registration
    # @return [GetAircraftResponse]
    def get_aircraft(opts = {})
      data, _status_code, _headers = get_aircraft_with_http_info(opts)
      data
    end

    # Aircraft by ID
    # Use this endpoint if you are looking for details or statistics for a specific aircraft (find by Mode-S hex code or tail number)
    # @param [Hash] opts the optional parameters
    # @option opts [String] :mode_s Mode-S code
    # @option opts [String] :registration Registration
    # @return [Array<(GetAircraftResponse, Integer, Hash)>] GetAircraftResponse data, response status code and response headers
    def get_aircraft_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AircraftApi.get_aircraft ...'
      end
      # resource path
      local_var_path = '/aircraft'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'modeS'] = opts[:'mode_s'] if !opts[:'mode_s'].nil?
      query_params[:'registration'] = opts[:'registration'] if !opts[:'registration'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'GetAircraftResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AircraftApi#get_aircraft\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Aircraft search
    # Use this endpoint if you want to list all aircraft of a specific ICAO type or company
    # @param [Hash] opts the optional parameters
    # @option opts [String] :aircraft_type ICAO aircraft type
    # @option opts [String] :airline Airline (ICAO code)
    # @return [SearchAircraftResponse]
    def search_aircraft(opts = {})
      data, _status_code, _headers = search_aircraft_with_http_info(opts)
      data
    end

    # Aircraft search
    # Use this endpoint if you want to list all aircraft of a specific ICAO type or company
    # @param [Hash] opts the optional parameters
    # @option opts [String] :aircraft_type ICAO aircraft type
    # @option opts [String] :airline Airline (ICAO code)
    # @return [Array<(SearchAircraftResponse, Integer, Hash)>] SearchAircraftResponse data, response status code and response headers
    def search_aircraft_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AircraftApi.search_aircraft ...'
      end
      # resource path
      local_var_path = '/aircraft/search'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'aircraftType'] = opts[:'aircraft_type'] if !opts[:'aircraft_type'].nil?
      query_params[:'airline'] = opts[:'airline'] if !opts[:'airline'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'SearchAircraftResponse' 

      auth_names = opts[:auth_names] || ['bearerToken']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AircraftApi#search_aircraft\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
